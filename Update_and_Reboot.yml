---
- name: Update Linux systems and check for reboot requirement
  hosts: all
  become: yes
  gather_facts: yes

  tasks:
    - name: Determine package manager and update command
      block:
        - name: Set variables for RedHat/CentOS 6/7/8/9
          set_fact:
            pkg_manager: "yum"
            update_cmd: "yum update -y"
            needs_reboot_file: "/var/run/reboot-required"
            reboot_pkg: "yum-utils"
            check_reboot_cmd: "needs-restarting -r"
          when: ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS'

        - name: Set variables for SUSE 12/15
          set_fact:
            pkg_manager: "zypper"
            update_cmd: "zypper --non-interactive update"
            needs_reboot_file: "/var/run/reboot-required"
            reboot_pkg: ""
            check_reboot_cmd: "zypper ps -s"
          when: ansible_distribution == 'SUSE'

        - name: Set variables for Ubuntu
          set_fact:
            pkg_manager: "apt"
            update_cmd: "apt-get update && apt-get upgrade -y"
            needs_reboot_file: "/var/run/reboot-required"
            reboot_pkg: "needrestart"
            check_reboot_cmd: "needrestart -b"
          when: ansible_distribution == 'Ubuntu'

      rescue:
        - name: Fail if distribution is not supported
          fail:
            msg: "Distribución no soportada: {{ ansible_distribution }}"
          when: pkg_manager is not defined

    - name: Install reboot check tools if needed
      package:
        name: "{{ reboot_pkg }}"
        state: present
      when: reboot_pkg != ""

    - name: Perform system update
      shell: "{{ update_cmd }}"
      args:
        executable: /bin/bash
      register: update_result
      changed_when: update_result.rc == 0

    - name: Check if reboot is required (RedHat/CentOS method)
      shell: "{{ check_reboot_cmd }}"
      register: reboot_check
      ignore_errors: yes
      changed_when: false
      when: 
        - ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS'
        - reboot_pkg != ""

    - name: Check if reboot is required (SUSE method)
      shell: "{{ check_reboot_cmd }}"
      register: reboot_check
      ignore_errors: yes
      changed_when: false
      when: ansible_distribution == 'SUSE'

    - name: Check if reboot is required (Ubuntu method)
      stat:
        path: "{{ needs_reboot_file }}"
      register: reboot_file
      when: ansible_distribution == 'Ubuntu'

    - name: Set reboot required fact
      set_fact:
        reboot_required: true
      when: 
        - (ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS') and 
          (reboot_check.rc == 1 or 'Reboot is required' in reboot_check.stdout)
        - or (ansible_distribution == 'SUSE' and reboot_check.stdout != '')
        - or (ansible_distribution == 'Ubuntu' and reboot_file.stat.exists)

    - name: Show reboot requirement status
      debug:
        msg: "El sistema requiere reinicio después de las actualizaciones"
      when: reboot_required | default(false)

    - name: Show no reboot needed
      debug:
        msg: "El sistema NO requiere reinicio"
      when: not (reboot_required | default(false))
